{"version":3,"sources":["NoteContext.js","FolderList/FolderList.js","Note/Note.js","MiscFunctions.js","MainList/MainList.js","NotePage/NotePage.js","AddNote/AddNote.js","AddFolder/AddFolder.js","AddNote/ErrorBoundary.js","App/App.js","index.js"],"names":["NoteContext","React","createContext","notes","folders","addNote","deleteNote","addFolder","deleteFolder","FolderList","this","context","className","map","folder","NavLink","to","id","name","Link","Component","contextType","Note","handleClickDelete","e","preventDefault","noteId","props","history","push","fetch","method","headers","then","res","ok","json","Promise","reject","catch","error","console","type","onClick","modified","default","onDeleteNote","MainList","folderId","match","params","notesForFolder","filter","note","toString","grabNotesForFolder","undefined","NotePage","find","grabNote","content","split","para","i","goBack","AddNote","handleSubmit","newNote","target","value","Date","body","JSON","stringify","onSubmit","htmlFor","required","AddFolder","ErrorBoundary","state","hasError","children","App","handleDeleteNote","setState","handleDeleteFolder","handleAddNote","handleAddFolder","all","notesRes","foldersRes","path","Route","exact","component","Provider","renderFolderList","renderMain","ReactDOM","render","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.ceeecc09.chunk.js","sourcesContent":["import React from 'react';\n \n const NoteContext = React.createContext({\n    notes:[],\n    folders:[],\n    addNote: () => {},\n    deleteNote: () => {},\n    addFolder: () => {},\n    deleteFolder: () => {},\n})\n\nexport default NoteContext","import React from 'react';\nimport { NavLink, Link} from 'react-router-dom';\nimport NoteContext from '../NoteContext';\nimport './FolderList.css';\n\n//displays a list of folders with paths to display just items in those folders -- NavLink is Link with special properties for when selected \n\nexport default class FolderList extends React.Component {\n  static contextType = NoteContext\n\n\n  render(){\n    const {folders} = this.context;\n\n  return (\n    <div className='FolderDiv'>\n      <ul className='FolderList'>\n        {folders.map(folder =>\n          <li key={folder.id}>\n            <NavLink\n              className='FolderLink'\n              to={`/folder/${folder.id}`}\n            >\n              {folder.name}\n            </NavLink>\n          </li>\n        )}\n         <Link to='/add-folder'>\n        <button className='add-folder-button'>Add New Folder</button>\n        </Link>\n      </ul>\n    </div>\n  )\n }\n}\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport NoteContext from '../NoteContext';\nimport PropTypes from 'prop-types';\nimport './Note.css';\n\n//creates a note item that acts a link\n\nexport default class Note extends React.Component {\n  static default = {\n    onDeleteNote: () => {},\n  }\n\n  static contextType = NoteContext;\n\n    handleClickDelete = e => {\n      e.preventDefault();\n      const noteId = this.props.id\n        this.props.history.push(`/`)\n    fetch(`http://localhost:8000/api/notes/${noteId}`, {\n      \n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'},\n    })\n    .then(res => {\n      if (!res.ok)\n        return res.json().then(e => Promise.reject(e))\n      \n    })\n    .then(() =>{\n       this.context.deleteNote(noteId)\n      }) \n    .catch((error) => {\n      console.error({ error })\n    })\n}\n    render(){\n  return (\n    <div className='Note'>\n      <h2 className='NoteTitle'>\n        <Link to={`/note/${this.props.id}`}>\n          {this.props.name}\n        </Link>\n      </h2>\n      <button\n       className='NoteDelete'\n        type='button'\n        onClick={this.handleClickDelete}>\n        Remove\n      </button>\n      <div className='NoteDates'>\n        <div className='NoteModified'>\n          Modified: {''}\n          <span className='Date'>\n            {this.props.modified}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n  }\n}\nNote.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modified: PropTypes.string,\n  }\n","\n//takes in an array of all the notes and a noteId to find the correct note\nexport const grabNote = (notes=[], noteId) =>{\n return notes.find(note => note.id.toString() === noteId)\n}\n\n// if there is no folderId display all the notes, else return the notes in the folder with that Id\nexport const grabNotesForFolder = (notes=[], folderId) =>{\n\n  return (\n  !folderId\n    ?  notes\n    : notes.filter(note => note.folder.toString() === folderId))}\n","import React from 'react';\nimport Note from '../Note/Note';\nimport NoteContext from '../NoteContext';\nimport {Link} from 'react-router-dom';\nimport {grabNotesForFolder} from '../MiscFunctions';\nimport PropTypes from 'prop-types';\nimport './MainList.css';\n\n//maps notes from folder or all notes and displays each as a list\n\n\n\nexport default class MainList extends React.Component {\n  static default = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = NoteContext;\n  handleClickDelete = e => {\n    e.preventDefault();\n    const {folderId} = this.props.match.params;\n    this.props.history.push(`/`)\n\n  fetch(`http://localhost:8000/api/folders/${folderId}`, {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json'},\n  })\n  .then(res => {\n    if (!res.ok){\n      return res.json().then(e => Promise.reject(e))\n    }\n  })\n  .then(() =>{\n    return this.context.deleteFolder(folderId)\n    }) \n    .catch(error => {\n      console.error({ error })\n    })\n  }\n  render(){\n    const {folderId} = this.props.match.params;\n    const {notes=[]} = this.context;\n   const notesForFolder = grabNotesForFolder( notes,folderId);\n  return (\n    <section className='MainList'>\n\n      <ul>\n        {notesForFolder.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n              history={this.props.history}\n            />\n          </li>\n        )}\n      </ul>\n      {folderId !== undefined &&\n       <button\n        onClick={(e) => this.handleClickDelete(e)}\n        >Delete Folder</button>}\n        <Link to='/add-note'>\n        <button className='add-note-button'>Add New Note</button>\n        </Link>\n    </section>\n  )\n  }\n}\n\nMainList.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired,\n  }","import React from 'react';\nimport Note from '../Note/Note';\nimport NoteContext from '../NoteContext';\nimport PropTypes from 'prop-types';\nimport {grabNote} from '../MiscFunctions';\n\nimport './NotePage.css';\n\n//returns NOTE and gives  -- formats note content and returns p elements content with index as key -- Back button uses history prop to go back to last path\n\nexport default class NotePage extends React.Component {\n  static contextType = NoteContext;\n\n  static default = {\n    notes: [],\n  }\n  \n\n  render(){\n    const {notes} = this.context;\n    const {noteId} = this.props.match.params;\n\n    const note = grabNote(notes, noteId) || { content: '' }\n    return(\n    <section className='NotePage'>\n      <Note\n        id={note.id}\n        name={note.name}\n        \n        modified={note.modified}\n        history={this.props.history}\n      />\n      <div className='NotePageContent'>\n        {note.content.split(/\\n \\r/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n      <div className='BackButton'>\n      <button\n        onClick={() => (this.props.history.goBack())}\n      >\n        <br />\n        Back\n      </button>\n    </div>\n    </section>\n      ) \n        }\n}\n\nNotePage.propTypes ={\n content: PropTypes.objectOf(PropTypes.string),\n history: PropTypes.object.isRequired,\n match: PropTypes.object.isRequired,\n}\n\n","import React from 'react';\nimport NoteContext from '../NoteContext';\nimport PropTypes from 'prop-types';\n\nexport default class AddNote extends React.Component{\nstatic default ={\n    history: {\n        push: () => {}\n    },\n}\n\nstatic contextType = NoteContext;\n\nhandleSubmit = e => { \n    e.preventDefault();\n    const newNote ={\n        name: e.target['note-name'].value,\n        content: e.target['note-content'].value,\n        folder: e.target['note-folder-id'].value,\n        modified: new Date(),\n    }\n\n\nfetch(`http://localhost:8000/api/notes`, {\n      method: 'POST',\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(newNote),\n    })\n    .then(res => {\n      if (!res.ok)\n        return res.json().then((e) => Promise.reject(e))\n      return res.json();\n    })\n    .then((note) =>{\n        this.context.addNote(note);\n        this.props.history.push(`/folder/${note.folder}`);\n      }) \n      .catch((error) => {\n        console.error({ error })\n      })\n    }\n\nrender(){\n    const { folders=[] } = this.context\n    return(\n        <section className='AddNote'>\n        <h2>Create a note</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name:{' '}\n            </label>\n            <input type='text' id='note-name-input' name='note-name' required/>\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content:{' '}\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n              <label htmlFor='note-folder-select'>Folder:{' '}</label>\n               <select id='name-folder-select' name='note-folder-id'>\n               <option value={null}>...</option>\n               {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.name}\n                </option>\n              )}\n               </select>   \n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Submit\n            </button>\n          </div>\n        </form>\n        <button onClick={() => (this.props.history.goBack())}>Cancel</button>\n      </section>\n    )\n}\n}\nAddNote.propTypes = {\n  history: PropTypes.object.isRequired,\n  }","import React from \"react\";\nimport NoteContext from \"../NoteContext\";\nimport PropTypes from \"prop-types\";\n\nexport default class AddFolder extends React.Component {\n  static default = {\n    history: {\n      push: () => {},\n    },\n  };\n  static contextType = NoteContext;\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const folder = {\n      name: e.target[\"folder-name\"].value,\n    };\n    fetch(`http://localhost:8000/api/folders`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(folder),\n    })\n      .then((res) => {\n        if (!res.ok) return res.json().then((e) => Promise.reject(e));\n        return res.json();\n      })\n      .then((folder) => {\n        this.context.addFolder(folder);\n        this.props.history.push(`/folder/${folder.id}`);\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  };\n\n  render() {\n    return (\n      <section className=\"AddFolder\">\n        <h2>Create a folder</h2>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"folder-name-input\">Name: </label>\n            <input\n              type=\"text\"\n              id=\"folder-name-input\"\n              name=\"folder-name\"\n              required\n            />\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\">Add folder</button>\n          </div>\n        </form>\n        <button onClick={() => this.props.history.goBack()}>Cancel</button>\n      </section>\n    );\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component{\n    constructor() {\n        super();\n        this.state = {\n          hasError: false\n        };\n      }\n      static getErrorState(error) {\n        return { hasError: true };\n      }\n      render() {\n        if (this.state.hasError) {      \n          return (\n            <h2>Could not display This Note.</h2>\n          );\n        }\n        return this.props.children;\n      }  \n}","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport NoteContext from \"../NoteContext\";\nimport FolderList from \"../FolderList/FolderList\";\nimport MainList from \"../MainList/MainList\";\nimport NotePage from \"../NotePage/NotePage\";\nimport AddNote from \"../AddNote/AddNote\";\nimport AddFolder from \"../AddFolder/AddFolder\";\nimport \"./App.css\";\nimport ErrorBoundary from \"../AddNote/ErrorBoundary\";\n\n//TODO 'All Notes' button -- removeNote, removeFolder, addNote, addFolder.\n\nclass App extends Component {\n  //State holds data from AJAX request\n  state = {\n    notes: [],\n    folders: [],\n  };\n  componentDidMount() {\n    Promise.all([\n      fetch(`http://localhost:8000/api/notes`),\n      fetch(`http://localhost:8000/api/folders`),\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n         return notesRes.json().then((e) => Promise.reject(e));\n        if (!foldersRes.ok)\n          return foldersRes.json().then((e) => Promise.reject(e));\n\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders });\n      })\n      .catch((error) => {\n        console.error({ error });\n      });\n  }\n  handleDeleteNote = (noteId) => {\n    this.setState({\n      notes: this.state.notes.filter((note) => note.id !== noteId),\n    });\n  };\n\n  handleDeleteFolder = (folderId) => {\n    this.setState({\n      folders: this.state.folders.filter((folder) => folder.id.toString() !== folderId),\n    });\n  };\n  handleAddNote = (note) => [\n    this.setState({\n      notes: [...this.state.notes, note],\n    }),\n  ];\n  handleAddFolder = (folder) => [\n    this.setState({\n      folders: [...this.state.folders, folder],\n    }),\n  ];\n\n  renderFolderList() {\n    return (\n      <>\n        {[\"/\", \"/folder/:folderId\"].map((path) => (\n          <Route exact key={path} path={path} component={FolderList} />\n        ))}\n      </>\n    );\n  }\n\n  renderMain() {\n    return (\n      <>\n        {[\"/\", \"/folder/:folderId\"].map((path) => (\n          <Route exact key={path} path={path} component={MainList} />\n        ))}\n        <Route path=\"/note/:noteId\" component={NotePage} />\n        <Route path=\"/add-note\" component={AddNote} />\n        <Route path=\"/add-folder\" component={AddFolder} />\n      </>\n    );\n  }\n\n  render() {\n    const context = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      deleteNote: this.handleDeleteNote,\n      deleteFolder: this.handleDeleteFolder,\n      addNote: this.handleAddNote,\n      addFolder: this.handleAddFolder,\n    };\n    return (\n      <NoteContext.Provider value={context}>\n        <div className=\"App\">\n          <ErrorBoundary>\n            <nav className=\"Folders\">{this.renderFolderList()}</nav>\n            <header className=\"Header\">\n              <h1>\n                <Link to=\"/\">Noteful</Link>\n              </h1>\n            </header>\n            <main className=\"AppMain\">{this.renderMain()}</main>\n          </ErrorBoundary>\n        </div>\n      </NoteContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App/App'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}